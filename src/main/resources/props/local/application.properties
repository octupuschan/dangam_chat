
# ===============================
# = SPRING MVC VIEW
# ===============================
spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp
# ===============================
# = SERVER SETTING
# ===============================
server.contextPath = /
server.port = 8080

# ===============================
# = velocity setting
# ===============================
spring.velocity.enabled=false

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

#MyBatis SQL Loggine
##로그있는 datasource
##spring.datasource.url = jdbc:log4jdbc:mysql://swalabinstance.c28mqcglslqm.ap-northeast-2.rds.amazonaws.com:3306/swadb?useSSL=false
spring.datasource.url = jdbc:log4jdbc:mysql://dangam-dev-mariadb.cmwhwk1ny4ya.ap-northeast-2.rds.amazonaws.com:3306/aramchat?useSSL=false
spring.datasource.driver_class_name= net.sf.log4jdbc.sql.jdbcapi.DriverSpy

###로그없는 datasource
#spring.datasource.url = jdbc:mysql://dangam-dev-mariadb.cmwhwk1ny4ya.ap-northeast-2.rds.amazonaws.com:3306/dangamdev?useSSL=false
#spring.datasource.driver_class_name= com.mysql.jdbc.Driver

#Tomcat DBCP

# Username and password
##spring.datasource.username = namudata
##spring.datasource.password = #namudata#
spring.datasource.username = dangamdev01
spring.datasource.password = dangamdev01password!

# Keep the connection alive if idle for a long time (needed in production)

spring.datasource.tomcat.max-active=2
spring.datasource.tomcat.max-idle=2
spring.datasource.tomcat.min-idle=0

spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.validation-query=SELECT 1

#spring.datasource.tomcat.timeBetweenEvictionRunsMillis = 6000

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (none, validate, update, create, create-drop): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.generate-ddl = false
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.EJB3NamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.naming.strategy = org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy


# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# ===============================
# = DANGAMNAMU CUSTOM
# ===============================

# AWS S3
dangam.namu.aws.s3.credentials.accessKey=AKIAIO6U7FQKUTSVNS4A
dangam.namu.aws.s3.credentials.secretKey=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
dangam.namu.aws.s3.region=ap-northeast-2
dangam.namu.aws.s3.bucket=test

mybatis.config=classpath:mybatis-config.xml